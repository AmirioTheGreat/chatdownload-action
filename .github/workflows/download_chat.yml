# This is a basic workflow to help you get started with Actions

name: Download Livestream Chat

concurrency: streamdownloader
# Controls when the workflow will run
on:
#   schedule:
#     - cron: '*/5 * * * *'  # every 5 minutes

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  download-chat:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Check Stream Is Live
        env:
          channelid: InfraredShow
        id: livecheck
        run: curl -s https://www.youtube.com/c/"$channelid"/live | grep -o '"isLive":true' -c
        continue-on-error: true

      - name: Install dependencies
        id: predownload
        if: steps.livecheck.outcome == 'success'
        run: |
          pip install git+https://github.com/xenova/chat-downloader.git

      - name: Checkout repo
        if: steps.predownload.outcome == 'success'
        uses: actions/checkout@v3

      - name: Download streamchat
        env:
          channelid: InfraredShow
        if: steps.predownload.outcome == 'success'
        continue-on-error: true
        run: |
          videoId=$(curl -s https://www.youtube.com/c/"$channelid"/live| grep -o -E '\{"videoId":"[a-z0-9A-Z_-]{11}' | head -1)
          videoId=${videoId:12:11}
          date=$(date +%Y-%m-%d)
          chat_downloader https://www.youtube.com/watch?v="$videoId" --message_groups all -o "$date".json

      - name: Add and commit files
        if: steps.predownload.outcome == 'success'
        continue-on-error: true
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update data"
          git push
